/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVesting,
  IVestingInterface,
} from "../../../interfaces/iVesting.sol/IVesting";

const _abi = [
  {
    inputs: [],
    name: "AmountLow",
    type: "error",
  },
  {
    inputs: [],
    name: "AtMaxVestingSchedules",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidScheduleParams",
    type: "error",
  },
  {
    inputs: [],
    name: "NotVesting",
    type: "error",
  },
  {
    inputs: [],
    name: "ScheduleIndexOutOfBounds",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "VestingCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "scheduleIndex",
        type: "uint32",
      },
    ],
    name: "VestingCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unvested",
        type: "uint256",
      },
    ],
    name: "VestingUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "locked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "perBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startingBlock",
        type: "uint256",
      },
    ],
    name: "canAddVestingSchedule",
    outputs: [
      {
        internalType: "bool",
        name: "canAdd",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "scheduleIndex",
        type: "uint32",
      },
    ],
    name: "forceRemoveVestingSchedule",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "locked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "perBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingBlock",
            type: "uint256",
          },
        ],
        internalType: "struct IVesting.VestingInfo",
        name: "schedule",
        type: "tuple",
      },
    ],
    name: "forceVestedTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVestingSchedules",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "locked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "perBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingBlock",
            type: "uint256",
          },
        ],
        internalType: "struct IVesting.VestingInfo[]",
        name: "schedules",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxVestingSchedules",
    outputs: [
      {
        internalType: "uint32",
        name: "max",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "schedule1Index",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "schedule2Index",
        type: "uint32",
      },
    ],
    name: "mergeSchedules",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minVestedTransfer",
    outputs: [
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vest",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "vestOther",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "locked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "perBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingBlock",
            type: "uint256",
          },
        ],
        internalType: "struct IVesting.VestingInfo",
        name: "schedule",
        type: "tuple",
      },
    ],
    name: "vestedTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "vestingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IVesting__factory {
  static readonly abi = _abi;
  static createInterface(): IVestingInterface {
    return new Interface(_abi) as IVestingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IVesting {
    return new Contract(address, _abi, runner) as unknown as IVesting;
  }
}
